创建版本库：
1.创建空文件夹（新目录）
2.在新目录下：git init

添加文件：
git add (file)

提交文件：
git commit -m "说明信息"

查看仓库当前状态：
git status

查看改变(更改的文件与add到缓存之间的改变）：
git diff 

查看版本：
git log 

选择版本： 
git reset --hard <版本ID> 

回退版本：
git reset --hard HEAD^ :回退1个版本
git reset --hard HEAD^^ :回退2个版本
git reset --hard HEAD~N :回退N个版本

查看最新版本与当前工作区<readme.txt>文件的区别：
git diff HEAD -- readme.txt

撤回修改：
git restore --staged <file>  ：撤回暂缓区的修改
git restore <file> : 撤回工作区的修改

将本地版本库上传到Github库：
git remote add origin git@github.com:ApeMocker/learngit.git
git push -u origin master

将本地新的提交上传至Github：
git push origin master

从Github库克隆：
git clone git@github.com:ApeMocker/gitskills.git

创建分支dev：
git branch dev

切换分支：
git checkout dev
或者 git switch -c 

创建加切换：
git checkout -b <name>
或者 git switch -c <name>

查看所有分支：
git branch

合并某分支到当前分支：
git merge dev

删除分支：
git branch -d dev


保存工作区：
git stash

查看保留的工作区：
git stash list

恢复工作区:
git stash apply <name>

删除工作区：
git stash drop <name>

弹出工作区：
git stash pop

将某个修改复制到当前分支：
git cherry-pick <name>

查看远程库信息：
git remote -v

从本地推送分支：
git push origin branch-name

从本地创建和远程分支对应的分支：
git checkout -b branch-name origin/branch-name

建立本地分支和远程分支的关联： 
git branch --set-upstream branch-name origin/branch-name

从远程抓取分支：
git pull

创建标签：
git tag <tagname>

指定标签信息：
git tag -a <tagname> -m "....."

查看所有标签：
git tag 

查看某个标签：
git show <tagname>

删除标签：
git tag -d <tagname>

将标签推送到远程：
git push origin <tagname>

推送所有本地标签：
git push origin --tags

删除远程标签：
git tag -d <tagname>
git push origin :refs/tags/<tagname>

github开源项目：
1.先将别人的版本库clone到自己的远程库
2.从自己的远程库clone到自己的本地库
3.在本地库进行开发修改

测试冲突
远程库再次测试冲突
